apply plugin: 'com.android.application'
apply plugin: 'synerise-plugin'

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        applicationId "com.synerise.sample"
        versionCode 7
        versionName "2.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        developmentConfig {
            keyAlias "debugKey"
            keyPassword "testtest"
            storeFile file("../debug_key.jks")
            storePassword "testtest"
        }
    }
    productFlavors {
        flavorDimensions "mode"
        dev {
            applicationId "com.synerise.sdk.sample.dev"
            dimension "mode"
        }
        prod {
            applicationId "com.synerise.sdk.sample"
            dimension "mode"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.developmentConfig
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.developmentConfig
        }
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

ext {
    butterKnifeVersion = '8.8.1'
    gsonVersion = '2.8.2'
    syneriseVersion = '3.1.7'
    playServicesVersion = '12.0.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // MultiDex
    implementation 'com.android.support:multidex:1.0.3'
    // Support
    implementation rootProject.ext.supportAnnotations
    implementation rootProject.ext.supportV4
    implementation rootProject.ext.appCompatV7
    implementation rootProject.ext.recycler
    implementation rootProject.ext.cardView
    implementation rootProject.ext.design
    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"
    // Dagger
    implementation rootProject.ext.dagger
    annotationProcessor rootProject.ext.daggerCompiler
    // RxJava
    implementation rootProject.ext.rxJava2
    implementation rootProject.ext.rxAndroid
    // OkHttp
    implementation rootProject.ext.okhttp3
    implementation rootProject.ext.okhttp3Interceptor
    // Retrofit
    implementation rootProject.ext.retrofit2
    implementation rootProject.ext.retrofit2Converter
    implementation rootProject.ext.retrofit2Adapter
    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"
    // Synerise
    implementation "com.synerise.sdk:synerise-mobile-sdk:$syneriseVersion"
    //implementation project(':synerise-mobile-sdk')
    // Firebase
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"
    // UI
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.airbnb.android:lottie:2.2.5'
    implementation 'com.mxn.soul:flowingdrawer-core:2.0.0'
    implementation 'com.nineoldandroids:library:2.4.0' // required for flowing_drawer
    // Test
    testImplementation rootProject.ext.junit
    androidTestImplementation rootProject.ext.supportTestRunner
    androidTestImplementation rootProject.ext.espressoCore
    implementation 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.1') {
        // needed for PickedActions class used in TrackerViewActivityTest
        exclude group: 'com.android.support', module: 'appcompat'
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'appcompat-v7'
    }
}

apply plugin: 'com.google.gms.google-services' // get `google-services.json` from Firebase console first